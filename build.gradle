println """\
Welcome to Gradle $gradle.gradleVersion - http://www.gradle.org
Gradle home is set to: $gradle.gradleHomeDir
Gradle user directory is set to: $gradle.gradleUserHomeDir

Base directory: $projectDir
Running script ${relativePath(buildFile)}
"""

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'git'


group = 'ws.antonov.gradle.plugins'
version = '1.0.5'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.1.0'
    }
}

test {
    //jvmArgs '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    //debug true
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
    groovy localGroovy()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}

project.ext.set("signing.secretKeyRingFile", new File("${System.properties['user.home']}/.gnupg/secring.gpg"))

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn:groovydoc) {
     classifier = 'groovydoc'
     from groovydoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives groovydocJar
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}


uploadArchives {
        def password = project.hasProperty('password') ? "$password" : ''
        repositories {
            mavenDeployer {
                repository(url: "https://kenshoo.artifactoryonline.com/kenshoo/simple/libs-releases-local/") {
                    authentication(userName: "deployer", password: password)
                }
                snapshotRepository(url: "https://kenshoo.artifactoryonline.com/kenshoo/simple/libs-snapshots-local/") {
                    authentication(userName: "deployer", password: password)
                }
            }
        }
    }


